{"ast":null,"code":"import{useState,useCallback}from'react';export function useNotifications(){const[notifications,setNotifications]=useState([]);const addNotification=useCallback(function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'info';const newNotification={id:Date.now().toString(),message,type};setNotifications(prev=>[newNotification,...prev.slice(0,4)]);setTimeout(()=>{setNotifications(prev=>prev.filter(n=>n.id!==newNotification.id));},5000);},[]);return{notifications,addNotification};}","map":{"version":3,"names":["useState","useCallback","useNotifications","notifications","setNotifications","addNotification","message","type","arguments","length","undefined","newNotification","id","Date","now","toString","prev","slice","setTimeout","filter","n"],"sources":["c:/Users/PC_User/Desktop/free-crm/bhotch-crm/src/hooks/useNotifications.js"],"sourcesContent":["import { useState, useCallback } from 'react';\r\n\r\nexport function useNotifications() {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  const addNotification = useCallback((message, type = 'info') => {\r\n    const newNotification = { id: Date.now().toString(), message, type };\r\n    setNotifications(prev => [newNotification, ...prev.slice(0, 4)]);\r\n    setTimeout(() => {\r\n      setNotifications(prev => prev.filter(n => n.id !== newNotification.id));\r\n    }, 5000);\r\n  }, []);\r\n\r\n  return { notifications, addNotification };\r\n}"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CAE7C,MAAO,SAAS,CAAAC,gBAAgBA,CAAA,CAAG,CACjC,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGJ,QAAQ,CAAC,EAAE,CAAC,CAEtD,KAAM,CAAAK,eAAe,CAAGJ,WAAW,CAAC,SAACK,OAAO,CAAoB,IAAlB,CAAAC,IAAI,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,MAAM,CACzD,KAAM,CAAAG,eAAe,CAAG,CAAEC,EAAE,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAET,OAAO,CAAEC,IAAK,CAAC,CACpEH,gBAAgB,CAACY,IAAI,EAAI,CAACL,eAAe,CAAE,GAAGK,IAAI,CAACC,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAAC,CAChEC,UAAU,CAAC,IAAM,CACfd,gBAAgB,CAACY,IAAI,EAAIA,IAAI,CAACG,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACR,EAAE,GAAKD,eAAe,CAACC,EAAE,CAAC,CAAC,CACzE,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAET,aAAa,CAAEE,eAAgB,CAAC,CAC3C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}