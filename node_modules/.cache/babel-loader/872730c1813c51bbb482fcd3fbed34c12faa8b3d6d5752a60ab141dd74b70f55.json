{"ast":null,"code":"// Fix for deployment environment variable parsing issue\nlet GOOGLE_SCRIPT_URL = process.env.REACT_APP_GAS_WEB_APP_URL;\n\n// Handle case where environment variable includes the variable name\nif (GOOGLE_SCRIPT_URL && GOOGLE_SCRIPT_URL.includes('REACT_APP_GAS_WEB_APP_URL=')) {\n  GOOGLE_SCRIPT_URL = GOOGLE_SCRIPT_URL.split('REACT_APP_GAS_WEB_APP_URL=')[1];\n}\n\n// Ensure URL has proper protocol\nif (GOOGLE_SCRIPT_URL && !GOOGLE_SCRIPT_URL.startsWith('http')) {\n  GOOGLE_SCRIPT_URL = 'https://' + GOOGLE_SCRIPT_URL.replace(/^\\/+/, '');\n}\nclass GoogleSheetsService {\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n  }\n  async makeRequest(action, payload) {\n    if (!this.baseURL) return {\n      success: false,\n      message: 'API endpoint is not configured.'\n    };\n\n    // Production-ready service - debug logs removed\n\n    try {\n      const response = await fetch(this.baseURL, {\n        method: 'POST',\n        mode: 'cors',\n        credentials: 'omit',\n        headers: {\n          'Content-Type': 'text/plain;charset=utf-8'\n        },\n        body: JSON.stringify({\n          action,\n          ...payload\n        })\n      });\n      if (!response.ok) throw new Error(`Server responded with status: ${response.status}`);\n      const text = await response.text();\n      try {\n        const result = JSON.parse(text);\n        if (result.success === false) throw new Error(result.message || 'An unknown backend error occurred.');\n        return result;\n      } catch {\n        throw new Error('Invalid server response. The backend may have crashed.');\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: `Network error: ${error.message}`\n      };\n    }\n  }\n\n  // Lead operations\n  fetchLeads() {\n    return this.makeRequest('getLeads', {});\n  }\n  addLead(lead) {\n    return this.makeRequest('addLead', {\n      lead\n    });\n  }\n  updateLead(lead) {\n    return this.makeRequest('updateLead', {\n      lead\n    });\n  }\n  deleteLead(leadId) {\n    return this.makeRequest('deleteLead', {\n      leadId\n    });\n  }\n\n  // Job Count operations\n  fetchJobCounts() {\n    return this.makeRequest('getJobCounts', {});\n  }\n  addJobCount(jobCount) {\n    return this.makeRequest('addJobCount', {\n      jobCount\n    });\n  }\n  updateJobCount(jobCount) {\n    return this.makeRequest('updateJobCount', {\n      jobCount\n    });\n  }\n  deleteJobCount(jobCountId) {\n    return this.makeRequest('deleteJobCount', {\n      jobCountId\n    });\n  }\n\n  // Utility operations\n  testConnection() {\n    return this.makeRequest('testConnection', {});\n  }\n  geocodeAddress(address) {\n    return this.makeRequest('geocodeAddress', {\n      address\n    });\n  }\n}\nexport const googleSheetsService = new GoogleSheetsService(GOOGLE_SCRIPT_URL);","map":{"version":3,"names":["GOOGLE_SCRIPT_URL","process","env","REACT_APP_GAS_WEB_APP_URL","includes","split","startsWith","replace","GoogleSheetsService","constructor","baseURL","makeRequest","action","payload","success","message","response","fetch","method","mode","credentials","headers","body","JSON","stringify","ok","Error","status","text","result","parse","error","fetchLeads","addLead","lead","updateLead","deleteLead","leadId","fetchJobCounts","addJobCount","jobCount","updateJobCount","deleteJobCount","jobCountId","testConnection","geocodeAddress","address","googleSheetsService"],"sources":["C:/Users/PC_User/Desktop/free-crm/bhotch-crm/src/api/googleSheetsService.js"],"sourcesContent":["// Fix for deployment environment variable parsing issue\r\nlet GOOGLE_SCRIPT_URL = process.env.REACT_APP_GAS_WEB_APP_URL;\r\n\r\n// Handle case where environment variable includes the variable name\r\nif (GOOGLE_SCRIPT_URL && GOOGLE_SCRIPT_URL.includes('REACT_APP_GAS_WEB_APP_URL=')) {\r\n  GOOGLE_SCRIPT_URL = GOOGLE_SCRIPT_URL.split('REACT_APP_GAS_WEB_APP_URL=')[1];\r\n}\r\n\r\n// Ensure URL has proper protocol\r\nif (GOOGLE_SCRIPT_URL && !GOOGLE_SCRIPT_URL.startsWith('http')) {\r\n  GOOGLE_SCRIPT_URL = 'https://' + GOOGLE_SCRIPT_URL.replace(/^\\/+/, '');\r\n}\r\n\r\nclass GoogleSheetsService {\r\n  constructor(baseURL) { this.baseURL = baseURL; }\r\n    \r\n  async makeRequest(action, payload) {\r\n    if (!this.baseURL) return { success: false, message: 'API endpoint is not configured.' };\r\n\r\n    // Production-ready service - debug logs removed\r\n\r\n    try {\r\n      const response = await fetch(this.baseURL, {\r\n        method: 'POST', mode: 'cors', credentials: 'omit',\r\n        headers: { 'Content-Type': 'text/plain;charset=utf-8' },\r\n        body: JSON.stringify({ action, ...payload })\r\n      });\r\n      if (!response.ok) throw new Error(`Server responded with status: ${response.status}`);\r\n      const text = await response.text();\r\n      try { \r\n        const result = JSON.parse(text);\r\n        if (result.success === false) throw new Error(result.message || 'An unknown backend error occurred.');\r\n        return result;\r\n      }\r\n      catch { throw new Error('Invalid server response. The backend may have crashed.'); }\r\n    } catch (error) {\r\n      return { success: false, message: `Network error: ${error.message}` };\r\n    }\r\n  }\r\n    \r\n  // Lead operations\r\n  fetchLeads() { return this.makeRequest('getLeads', {}); }\r\n  addLead(lead) { return this.makeRequest('addLead', { lead }); }\r\n  updateLead(lead) { return this.makeRequest('updateLead', { lead }); }\r\n  deleteLead(leadId) { return this.makeRequest('deleteLead', { leadId }); }\r\n\r\n  // Job Count operations\r\n  fetchJobCounts() { return this.makeRequest('getJobCounts', {}); }\r\n  addJobCount(jobCount) { return this.makeRequest('addJobCount', { jobCount }); }\r\n  updateJobCount(jobCount) { return this.makeRequest('updateJobCount', { jobCount }); }\r\n  deleteJobCount(jobCountId) { return this.makeRequest('deleteJobCount', { jobCountId }); }\r\n\r\n  // Utility operations\r\n  testConnection() { return this.makeRequest('testConnection', {}); }\r\n  geocodeAddress(address) { return this.makeRequest('geocodeAddress', { address }); }\r\n}\r\n\r\nexport const googleSheetsService = new GoogleSheetsService(GOOGLE_SCRIPT_URL);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}