{"ast":null,"code":"/**\r\n * Services file for connecting React CRM to Google Sheets\r\n * Save this as: src/services.js\r\n */\n\n// Google Sheets Service Class\nclass GoogleSheetsService {\n  constructor() {\n    this.baseURL = process.env.REACT_APP_GAS_WEB_APP_URL;\n    if (!this.baseURL) {\n      console.error('Google Apps Script URL not configured! Check your .env file');\n    } else {\n      console.log('Google Sheets Service initialized with URL:', this.baseURL);\n    }\n  }\n  async makeRequest(data) {\n    try {\n      console.log('Sending request to Google Sheets:', data.action);\n      console.log('URL being used:', this.baseURL);\n      console.log('Data being sent:', data);\n\n      // CRITICAL: Use no-cors mode for Google Apps Script\n      await fetch(this.baseURL, {\n        method: 'POST',\n        mode: 'no-cors',\n        // Required for Google Apps Script\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n\n      // With no-cors, we can't read response but request is sent\n      console.log('Request sent successfully to Google Sheets!');\n\n      // Return success\n      return {\n        success: true,\n        message: 'Data sent to Google Sheets'\n      };\n    } catch (error) {\n      console.error('Error communicating with Google Sheets:', error);\n      throw error;\n    }\n  }\n  async getLeads(filters = {}) {\n    // With no-cors, we can't fetch data back\n    // Return empty array for now\n    console.log('Note: Reading from Google Sheets requires a different approach');\n    return [];\n  }\n  async addLead(lead) {\n    console.log('Adding lead:', lead);\n    return this.makeRequest({\n      action: 'addLead',\n      lead: lead\n    });\n  }\n  async updateLead(lead) {\n    console.log('Updating lead:', lead);\n    return this.makeRequest({\n      action: 'updateLead',\n      lead: lead\n    });\n  }\n  async deleteLead(leadId) {\n    console.log('Deleting lead:', leadId);\n    return this.makeRequest({\n      action: 'deleteLead',\n      leadId: leadId\n    });\n  }\n  async getStats() {\n    return this.makeRequest({\n      action: 'getStats'\n    });\n  }\n}\n\n// Activity Logger Class\nclass ActivityLogger {\n  constructor() {\n    this.backendURL = process.env.REACT_APP_GAS_WEB_APP_URL;\n  }\n  async logActivity(type, leadId, description) {\n    console.log(`Activity logged: ${type} - ${description}`);\n    // For now, just log to console\n    // Could send to Google Sheets if needed\n    return {\n      success: true\n    };\n  }\n}\n\n// Create and export service instances\nexport const googleSheetsService = new GoogleSheetsService();\nexport const activityLogger = new ActivityLogger();\n\n// Also export as default\nconst services = {\n  sheets: googleSheetsService,\n  logger: activityLogger\n};\nexport default services;","map":{"version":3,"names":["GoogleSheetsService","constructor","baseURL","process","env","REACT_APP_GAS_WEB_APP_URL","console","error","log","makeRequest","data","action","fetch","method","mode","headers","body","JSON","stringify","success","message","getLeads","filters","addLead","lead","updateLead","deleteLead","leadId","getStats","ActivityLogger","backendURL","logActivity","type","description","googleSheetsService","activityLogger","services","sheets","logger"],"sources":["C:/Users/PC_User/Desktop/free-crm/crm-frontend/src/services.js"],"sourcesContent":["/**\r\n * Services file for connecting React CRM to Google Sheets\r\n * Save this as: src/services.js\r\n */\r\n\r\n// Google Sheets Service Class\r\nclass GoogleSheetsService {\r\n  constructor() {\r\n    this.baseURL = process.env.REACT_APP_GAS_WEB_APP_URL;\r\n    \r\n    if (!this.baseURL) {\r\n      console.error('Google Apps Script URL not configured! Check your .env file');\r\n    } else {\r\n      console.log('Google Sheets Service initialized with URL:', this.baseURL);\r\n    }\r\n  }\r\n\r\n  async makeRequest(data) {\r\n    try {\r\n      console.log('Sending request to Google Sheets:', data.action);\r\n      console.log('URL being used:', this.baseURL);\r\n      console.log('Data being sent:', data);\r\n      \r\n      // CRITICAL: Use no-cors mode for Google Apps Script\r\n      await fetch(this.baseURL, {\r\n        method: 'POST',\r\n        mode: 'no-cors',  // Required for Google Apps Script\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data)\r\n      });\r\n\r\n      // With no-cors, we can't read response but request is sent\r\n      console.log('Request sent successfully to Google Sheets!');\r\n      \r\n      // Return success\r\n      return { success: true, message: 'Data sent to Google Sheets' };\r\n      \r\n    } catch (error) {\r\n      console.error('Error communicating with Google Sheets:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getLeads(filters = {}) {\r\n    // With no-cors, we can't fetch data back\r\n    // Return empty array for now\r\n    console.log('Note: Reading from Google Sheets requires a different approach');\r\n    return [];\r\n  }\r\n\r\n  async addLead(lead) {\r\n    console.log('Adding lead:', lead);\r\n    return this.makeRequest({ \r\n      action: 'addLead',\r\n      lead: lead \r\n    });\r\n  }\r\n\r\n  async updateLead(lead) {\r\n    console.log('Updating lead:', lead);\r\n    return this.makeRequest({ \r\n      action: 'updateLead',\r\n      lead: lead \r\n    });\r\n  }\r\n\r\n  async deleteLead(leadId) {\r\n    console.log('Deleting lead:', leadId);\r\n    return this.makeRequest({ \r\n      action: 'deleteLead',\r\n      leadId: leadId \r\n    });\r\n  }\r\n\r\n  async getStats() {\r\n    return this.makeRequest({ \r\n      action: 'getStats' \r\n    });\r\n  }\r\n}\r\n\r\n// Activity Logger Class\r\nclass ActivityLogger {\r\n  constructor() {\r\n    this.backendURL = process.env.REACT_APP_GAS_WEB_APP_URL;\r\n  }\r\n\r\n  async logActivity(type, leadId, description) {\r\n    console.log(`Activity logged: ${type} - ${description}`);\r\n    // For now, just log to console\r\n    // Could send to Google Sheets if needed\r\n    return { success: true };\r\n  }\r\n}\r\n\r\n// Create and export service instances\r\nexport const googleSheetsService = new GoogleSheetsService();\r\nexport const activityLogger = new ActivityLogger();\r\n\r\n// Also export as default\r\nconst services = {\r\n  sheets: googleSheetsService,\r\n  logger: activityLogger\r\n};\r\n\r\nexport default services;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}