{"ast":null,"code":"import _objectSpread from\"C:/Users/PC_User/Desktop/free-crm/bhotch-crm/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useCallback}from'react';import{Calculator,Play,Pause,CheckCircle,AlertCircle,Loader2,BarChart3}from'lucide-react';import{googleSheetsService}from'../api/googleSheetsService';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function BatchVentCalculation(_ref){let{jobCounts,onBatchComplete,addNotification}=_ref;const[isProcessing,setIsProcessing]=useState(false);const[progress,setProgress]=useState(null);const[results,setResults]=useState(null);const[selectedJobCounts,setSelectedJobCounts]=useState([]);const eligibleJobCounts=jobCounts.filter(jc=>jc.sqFt&&!isNaN(jc.sqFt)&&jc.sqFt>0&&(!jc.ridgeVents||!jc.turbineVents||!jc.rimeFlow));const handleSelectAll=useCallback(()=>{if(selectedJobCounts.length===eligibleJobCounts.length){setSelectedJobCounts([]);}else{setSelectedJobCounts(eligibleJobCounts.map(jc=>jc.id));}},[selectedJobCounts.length,eligibleJobCounts]);const handleJobCountToggle=useCallback(jobCountId=>{setSelectedJobCounts(prev=>prev.includes(jobCountId)?prev.filter(id=>id!==jobCountId):[...prev,jobCountId]);},[]);const handleBatchCalculation=useCallback(async()=>{if(selectedJobCounts.length===0){addNotification('Please select job counts to process','error');return;}setIsProcessing(true);setProgress({processed:0,total:selectedJobCounts.length,errors:0});const processResults=[];try{for(let i=0;i<selectedJobCounts.length;i++){const jobCountId=selectedJobCounts[i];const jobCount=eligibleJobCounts.find(jc=>jc.id===jobCountId);if(!jobCount)continue;try{setProgress(prev=>_objectSpread(_objectSpread({},prev),{},{current:jobCount.customerName||'Processing...'}));const response=await googleSheetsService.calculateLomacoVents(jobCount.sqFt);if(response.success&&response.ventCalculations){// Update the job count with calculated values\nconst updatedJobCount=_objectSpread(_objectSpread({},jobCount),{},{ridgeVents:response.ventCalculations.ridgeVents,turbineVents:response.ventCalculations.turbineVents,rimeFlow:response.ventCalculations.rimeFlow,ventCalculationSource:response.ventCalculations.source,ventCalculationDate:new Date().toISOString()});const updateResponse=await googleSheetsService.updateJobCount(updatedJobCount);if(updateResponse.success){processResults.push({jobCount:updatedJobCount,calculations:response.ventCalculations,method:response.calculationMethod,success:true});}else{throw new Error('Failed to update job count');}}else{throw new Error(response.message||'Calculation failed');}setProgress(prev=>_objectSpread(_objectSpread({},prev),{},{processed:prev.processed+1,current:\"Completed: \".concat(jobCount.customerName||'Unknown')}));}catch(error){processResults.push({jobCount,error:error.message,success:false});setProgress(prev=>_objectSpread(_objectSpread({},prev),{},{processed:prev.processed+1,errors:prev.errors+1,current:\"Error: \".concat(jobCount.customerName||'Unknown')}));}// Add delay between requests to avoid rate limiting\nif(i<selectedJobCounts.length-1){await new Promise(resolve=>setTimeout(resolve,1000));}}setResults(processResults);const successCount=processResults.filter(r=>r.success).length;const errorCount=processResults.filter(r=>!r.success).length;addNotification(\"Batch calculation complete: \".concat(successCount,\" successful, \").concat(errorCount,\" errors\"),errorCount===0?'success':'info');if(onBatchComplete){onBatchComplete(processResults);}}catch(error){addNotification(\"Batch calculation failed: \".concat(error.message),'error');}finally{setIsProcessing(false);setTimeout(()=>{setProgress(null);},5000);}},[selectedJobCounts,eligibleJobCounts,addNotification,onBatchComplete]);const formatValue=useCallback(value=>{if(!value||value===0)return'-';return typeof value==='number'?value.toLocaleString():value;},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-sm border p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(BarChart3,{className:\"h-6 w-6 text-purple-600 mr-3\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Batch Vent Calculation\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"Process multiple job counts automatically\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleSelectAll,className:\"px-3 py-1 text-xs font-medium border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 transition-colors\",children:selectedJobCounts.length===eligibleJobCounts.length?'Deselect All':'Select All'}),/*#__PURE__*/_jsx(\"button\",{onClick:handleBatchCalculation,disabled:isProcessing||selectedJobCounts.length===0,className:\"inline-flex items-center px-4 py-2 border border-transparent rounded-lg text-sm font-medium text-white bg-purple-600 hover:bg-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\",children:isProcessing?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Loader2,{className:\"w-4 h-4 mr-2 animate-spin\"}),\"Processing...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Play,{className:\"w-4 h-4 mr-2\"}),\"Process Selected (\",selectedJobCounts.length,\")\"]})})]})]}),progress&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6 p-4 bg-blue-50 rounded-lg border border-blue-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium text-blue-800\",children:[\"Processing: \",progress.processed,\" of \",progress.total]}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-blue-600\",children:[Math.round(progress.processed/progress.total*100),\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-blue-200 rounded-full h-2 mb-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-600 h-2 rounded-full transition-all duration-300\",style:{width:\"\".concat(progress.processed/progress.total*100,\"%\")}})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-blue-700\",children:progress.current}),progress.errors>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-red-600 mt-1\",children:[progress.errors,\" errors encountered\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between text-sm text-gray-600 border-b border-gray-200 pb-2\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Eligible Job Counts (\",eligibleJobCounts.length,\")\"]}),/*#__PURE__*/_jsx(\"span\",{children:\"SQFT \\u2192 Ridge/Turbine/Flow\"})]}),eligibleJobCounts.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8 text-gray-500\",children:[/*#__PURE__*/_jsx(Calculator,{className:\"w-8 h-8 mx-auto mb-2 text-gray-400\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No job counts eligible for batch calculation\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs\",children:\"Job counts need SQFT values and missing vent calculations\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"max-h-64 overflow-y-auto space-y-2\",children:eligibleJobCounts.map(jobCount=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-3 rounded-lg border transition-colors cursor-pointer \".concat(selectedJobCounts.includes(jobCount.id)?'bg-purple-50 border-purple-200':'bg-gray-50 border-gray-200 hover:bg-gray-100'),onClick:()=>handleJobCountToggle(jobCount.id),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:selectedJobCounts.includes(jobCount.id),onChange:()=>handleJobCountToggle(jobCount.id),className:\"mr-3 h-4 w-4 text-purple-600 focus:ring-purple-500 border-gray-300 rounded\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:jobCount.customerName||\"\".concat(jobCount.firstName||'',\" \").concat(jobCount.lastName||'').trim()||'Unknown Customer'}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500\",children:new Date(jobCount.date).toLocaleDateString()})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm font-medium text-gray-900\",children:[formatValue(jobCount.sqFt),\" sq ft\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500\",children:[\"R:\",formatValue(jobCount.ridgeVents),\" T:\",formatValue(jobCount.turbineVents),\" F:\",formatValue(jobCount.rimeFlow)]})]})]},jobCount.id))})]}),results&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 p-4 bg-gray-50 rounded-lg border\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-medium text-gray-900 mb-3\",children:\"Batch Results\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-3 gap-4 text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-lg font-bold text-green-600\",children:results.filter(r=>r.success).length}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-600\",children:\"Successful\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-lg font-bold text-red-600\",children:results.filter(r=>!r.success).length}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-600\",children:\"Errors\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-lg font-bold text-blue-600\",children:results.length}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-600\",children:\"Total\"})]})]})]})]});}export default BatchVentCalculation;","map":{"version":3,"names":["React","useState","useCallback","Calculator","Play","Pause","CheckCircle","AlertCircle","Loader2","BarChart3","googleSheetsService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BatchVentCalculation","_ref","jobCounts","onBatchComplete","addNotification","isProcessing","setIsProcessing","progress","setProgress","results","setResults","selectedJobCounts","setSelectedJobCounts","eligibleJobCounts","filter","jc","sqFt","isNaN","ridgeVents","turbineVents","rimeFlow","handleSelectAll","length","map","id","handleJobCountToggle","jobCountId","prev","includes","handleBatchCalculation","processed","total","errors","processResults","i","jobCount","find","_objectSpread","current","customerName","response","calculateLomacoVents","success","ventCalculations","updatedJobCount","ventCalculationSource","source","ventCalculationDate","Date","toISOString","updateResponse","updateJobCount","push","calculations","method","calculationMethod","Error","message","concat","error","Promise","resolve","setTimeout","successCount","r","errorCount","formatValue","value","toLocaleString","className","children","onClick","disabled","Math","round","style","width","type","checked","onChange","firstName","lastName","trim","date","toLocaleDateString"],"sources":["C:/Users/PC_User/Desktop/free-crm/bhotch-crm/src/components/BatchVentCalculation.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Calculator, Play, Pause, CheckCircle, AlertCircle, Loader2, BarChart3 } from 'lucide-react';\r\nimport { googleSheetsService } from '../api/googleSheetsService';\r\n\r\nfunction BatchVentCalculation({ jobCounts, onBatchComplete, addNotification }) {\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    const [progress, setProgress] = useState(null);\r\n    const [results, setResults] = useState(null);\r\n    const [selectedJobCounts, setSelectedJobCounts] = useState([]);\r\n\r\n    const eligibleJobCounts = jobCounts.filter(jc =>\r\n        jc.sqFt && !isNaN(jc.sqFt) && jc.sqFt > 0 &&\r\n        (!jc.ridgeVents || !jc.turbineVents || !jc.rimeFlow)\r\n    );\r\n\r\n    const handleSelectAll = useCallback(() => {\r\n        if (selectedJobCounts.length === eligibleJobCounts.length) {\r\n            setSelectedJobCounts([]);\r\n        } else {\r\n            setSelectedJobCounts(eligibleJobCounts.map(jc => jc.id));\r\n        }\r\n    }, [selectedJobCounts.length, eligibleJobCounts]);\r\n\r\n    const handleJobCountToggle = useCallback((jobCountId) => {\r\n        setSelectedJobCounts(prev =>\r\n            prev.includes(jobCountId)\r\n                ? prev.filter(id => id !== jobCountId)\r\n                : [...prev, jobCountId]\r\n        );\r\n    }, []);\r\n\r\n    const handleBatchCalculation = useCallback(async () => {\r\n        if (selectedJobCounts.length === 0) {\r\n            addNotification('Please select job counts to process', 'error');\r\n            return;\r\n        }\r\n\r\n        setIsProcessing(true);\r\n        setProgress({ processed: 0, total: selectedJobCounts.length, errors: 0 });\r\n\r\n        const processResults = [];\r\n\r\n        try {\r\n            for (let i = 0; i < selectedJobCounts.length; i++) {\r\n                const jobCountId = selectedJobCounts[i];\r\n                const jobCount = eligibleJobCounts.find(jc => jc.id === jobCountId);\r\n\r\n                if (!jobCount) continue;\r\n\r\n                try {\r\n                    setProgress(prev => ({ ...prev, current: jobCount.customerName || 'Processing...' }));\r\n\r\n                    const response = await googleSheetsService.calculateLomacoVents(jobCount.sqFt);\r\n\r\n                    if (response.success && response.ventCalculations) {\r\n                        // Update the job count with calculated values\r\n                        const updatedJobCount = {\r\n                            ...jobCount,\r\n                            ridgeVents: response.ventCalculations.ridgeVents,\r\n                            turbineVents: response.ventCalculations.turbineVents,\r\n                            rimeFlow: response.ventCalculations.rimeFlow,\r\n                            ventCalculationSource: response.ventCalculations.source,\r\n                            ventCalculationDate: new Date().toISOString()\r\n                        };\r\n\r\n                        const updateResponse = await googleSheetsService.updateJobCount(updatedJobCount);\r\n\r\n                        if (updateResponse.success) {\r\n                            processResults.push({\r\n                                jobCount: updatedJobCount,\r\n                                calculations: response.ventCalculations,\r\n                                method: response.calculationMethod,\r\n                                success: true\r\n                            });\r\n                        } else {\r\n                            throw new Error('Failed to update job count');\r\n                        }\r\n                    } else {\r\n                        throw new Error(response.message || 'Calculation failed');\r\n                    }\r\n\r\n                    setProgress(prev => ({\r\n                        ...prev,\r\n                        processed: prev.processed + 1,\r\n                        current: `Completed: ${jobCount.customerName || 'Unknown'}`\r\n                    }));\r\n\r\n                } catch (error) {\r\n                    processResults.push({\r\n                        jobCount,\r\n                        error: error.message,\r\n                        success: false\r\n                    });\r\n\r\n                    setProgress(prev => ({\r\n                        ...prev,\r\n                        processed: prev.processed + 1,\r\n                        errors: prev.errors + 1,\r\n                        current: `Error: ${jobCount.customerName || 'Unknown'}`\r\n                    }));\r\n                }\r\n\r\n                // Add delay between requests to avoid rate limiting\r\n                if (i < selectedJobCounts.length - 1) {\r\n                    await new Promise(resolve => setTimeout(resolve, 1000));\r\n                }\r\n            }\r\n\r\n            setResults(processResults);\r\n\r\n            const successCount = processResults.filter(r => r.success).length;\r\n            const errorCount = processResults.filter(r => !r.success).length;\r\n\r\n            addNotification(\r\n                `Batch calculation complete: ${successCount} successful, ${errorCount} errors`,\r\n                errorCount === 0 ? 'success' : 'info'\r\n            );\r\n\r\n            if (onBatchComplete) {\r\n                onBatchComplete(processResults);\r\n            }\r\n\r\n        } catch (error) {\r\n            addNotification(`Batch calculation failed: ${error.message}`, 'error');\r\n        } finally {\r\n            setIsProcessing(false);\r\n            setTimeout(() => {\r\n                setProgress(null);\r\n            }, 5000);\r\n        }\r\n    }, [selectedJobCounts, eligibleJobCounts, addNotification, onBatchComplete]);\r\n\r\n    const formatValue = useCallback((value) => {\r\n        if (!value || value === 0) return '-';\r\n        return typeof value === 'number' ? value.toLocaleString() : value;\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n                <div className=\"flex items-center\">\r\n                    <BarChart3 className=\"h-6 w-6 text-purple-600 mr-3\" />\r\n                    <div>\r\n                        <h3 className=\"text-lg font-semibold text-gray-900\">Batch Vent Calculation</h3>\r\n                        <p className=\"text-sm text-gray-600\">\r\n                            Process multiple job counts automatically\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex items-center space-x-3\">\r\n                    <button\r\n                        onClick={handleSelectAll}\r\n                        className=\"px-3 py-1 text-xs font-medium border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 transition-colors\"\r\n                    >\r\n                        {selectedJobCounts.length === eligibleJobCounts.length ? 'Deselect All' : 'Select All'}\r\n                    </button>\r\n                    <button\r\n                        onClick={handleBatchCalculation}\r\n                        disabled={isProcessing || selectedJobCounts.length === 0}\r\n                        className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-lg text-sm font-medium text-white bg-purple-600 hover:bg-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n                    >\r\n                        {isProcessing ? (\r\n                            <>\r\n                                <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\r\n                                Processing...\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <Play className=\"w-4 h-4 mr-2\" />\r\n                                Process Selected ({selectedJobCounts.length})\r\n                            </>\r\n                        )}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Progress Indicator */}\r\n            {progress && (\r\n                <div className=\"mb-6 p-4 bg-blue-50 rounded-lg border border-blue-200\">\r\n                    <div className=\"flex items-center justify-between mb-2\">\r\n                        <span className=\"text-sm font-medium text-blue-800\">\r\n                            Processing: {progress.processed} of {progress.total}\r\n                        </span>\r\n                        <span className=\"text-sm text-blue-600\">\r\n                            {Math.round((progress.processed / progress.total) * 100)}%\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"w-full bg-blue-200 rounded-full h-2 mb-2\">\r\n                        <div\r\n                            className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\r\n                            style={{ width: `${(progress.processed / progress.total) * 100}%` }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-xs text-blue-700\">\r\n                        {progress.current}\r\n                    </div>\r\n                    {progress.errors > 0 && (\r\n                        <div className=\"text-xs text-red-600 mt-1\">\r\n                            {progress.errors} errors encountered\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            {/* Job Count Selection */}\r\n            <div className=\"space-y-3\">\r\n                <div className=\"flex items-center justify-between text-sm text-gray-600 border-b border-gray-200 pb-2\">\r\n                    <span>Eligible Job Counts ({eligibleJobCounts.length})</span>\r\n                    <span>SQFT → Ridge/Turbine/Flow</span>\r\n                </div>\r\n\r\n                {eligibleJobCounts.length === 0 ? (\r\n                    <div className=\"text-center py-8 text-gray-500\">\r\n                        <Calculator className=\"w-8 h-8 mx-auto mb-2 text-gray-400\" />\r\n                        <p>No job counts eligible for batch calculation</p>\r\n                        <p className=\"text-xs\">Job counts need SQFT values and missing vent calculations</p>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"max-h-64 overflow-y-auto space-y-2\">\r\n                        {eligibleJobCounts.map((jobCount) => (\r\n                            <div\r\n                                key={jobCount.id}\r\n                                className={`flex items-center justify-between p-3 rounded-lg border transition-colors cursor-pointer ${\r\n                                    selectedJobCounts.includes(jobCount.id)\r\n                                        ? 'bg-purple-50 border-purple-200'\r\n                                        : 'bg-gray-50 border-gray-200 hover:bg-gray-100'\r\n                                }`}\r\n                                onClick={() => handleJobCountToggle(jobCount.id)}\r\n                            >\r\n                                <div className=\"flex items-center\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={selectedJobCounts.includes(jobCount.id)}\r\n                                        onChange={() => handleJobCountToggle(jobCount.id)}\r\n                                        className=\"mr-3 h-4 w-4 text-purple-600 focus:ring-purple-500 border-gray-300 rounded\"\r\n                                    />\r\n                                    <div>\r\n                                        <div className=\"font-medium text-gray-900\">\r\n                                            {jobCount.customerName ||\r\n                                             `${jobCount.firstName || ''} ${jobCount.lastName || ''}`.trim() ||\r\n                                             'Unknown Customer'}\r\n                                        </div>\r\n                                        <div className=\"text-xs text-gray-500\">\r\n                                            {new Date(jobCount.date).toLocaleDateString()}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"text-right\">\r\n                                    <div className=\"text-sm font-medium text-gray-900\">\r\n                                        {formatValue(jobCount.sqFt)} sq ft\r\n                                    </div>\r\n                                    <div className=\"text-xs text-gray-500\">\r\n                                        R:{formatValue(jobCount.ridgeVents)} T:{formatValue(jobCount.turbineVents)} F:{formatValue(jobCount.rimeFlow)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Results Summary */}\r\n            {results && (\r\n                <div className=\"mt-6 p-4 bg-gray-50 rounded-lg border\">\r\n                    <h4 className=\"text-sm font-medium text-gray-900 mb-3\">Batch Results</h4>\r\n                    <div className=\"grid grid-cols-3 gap-4 text-center\">\r\n                        <div>\r\n                            <div className=\"text-lg font-bold text-green-600\">\r\n                                {results.filter(r => r.success).length}\r\n                            </div>\r\n                            <div className=\"text-xs text-gray-600\">Successful</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"text-lg font-bold text-red-600\">\r\n                                {results.filter(r => !r.success).length}\r\n                            </div>\r\n                            <div className=\"text-xs text-gray-600\">Errors</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"text-lg font-bold text-blue-600\">\r\n                                {results.length}\r\n                            </div>\r\n                            <div className=\"text-xs text-gray-600\">Total</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BatchVentCalculation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}