{"ast":null,"code":"import _objectSpread from\"C:/Users/PC_User/Desktop/free-crm/bhotch-crm/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Fix for deployment environment variable parsing issue\nlet GOOGLE_SCRIPT_URL=process.env.REACT_APP_GAS_WEB_APP_URL;// Handle case where environment variable includes the variable name\nif(GOOGLE_SCRIPT_URL&&GOOGLE_SCRIPT_URL.includes('REACT_APP_GAS_WEB_APP_URL=')){GOOGLE_SCRIPT_URL=GOOGLE_SCRIPT_URL.split('REACT_APP_GAS_WEB_APP_URL=')[1];}// Ensure URL has proper protocol\nif(GOOGLE_SCRIPT_URL&&!GOOGLE_SCRIPT_URL.startsWith('http')){GOOGLE_SCRIPT_URL='https://'+GOOGLE_SCRIPT_URL.replace(/^\\/+/,'');}class GoogleSheetsService{constructor(baseURL){this.baseURL=baseURL;}async makeRequest(action,payload){if(!this.baseURL){return{success:false,message:'API endpoint is not configured.'};}try{const response=await fetch(this.baseURL,{method:'POST',mode:'cors',credentials:'omit',headers:{'Content-Type':'text/plain;charset=utf-8'},body:JSON.stringify(_objectSpread({action},payload))});if(!response.ok){throw new Error(\"Server responded with status: \".concat(response.status));}const text=await response.text();try{const result=JSON.parse(text);if(result.success===false){throw new Error(result.message||'An unknown backend error occurred.');}return result;}catch(parseError){throw new Error('Invalid server response. The backend may have crashed.');}}catch(error){return{success:false,message:\"Network error: \".concat(error.message)};}}// Lead operations\nfetchLeads(){return this.makeRequest('getLeads',{});}addLead(lead){return this.makeRequest('addLead',{lead});}updateLead(lead){return this.makeRequest('updateLead',{lead});}deleteLead(leadId){return this.makeRequest('deleteLead',{leadId});}// Job Count operations\nfetchJobCounts(){return this.makeRequest('getJobCounts',{});}addJobCount(jobCount){return this.makeRequest('addJobCount',{jobCount});}updateJobCount(jobCount){return this.makeRequest('updateJobCount',{jobCount});}deleteJobCount(jobCountId){return this.makeRequest('deleteJobCount',{jobCountId});}// Utility operations\ntestConnection(){return this.makeRequest('testConnection',{});}geocodeAddress(address){return this.makeRequest('geocodeAddress',{address});}// Lomanco vent calculation operations\ncalculateLomacoVents(sqft){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return this.makeRequest('calculateLomacoVents',{sqft,options});}batchCalculateVents(){let jobCountIds=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return this.makeRequest('batchCalculateVents',{jobCountIds});}}export const googleSheetsService=new GoogleSheetsService(GOOGLE_SCRIPT_URL);","map":{"version":3,"names":["GOOGLE_SCRIPT_URL","process","env","REACT_APP_GAS_WEB_APP_URL","includes","split","startsWith","replace","GoogleSheetsService","constructor","baseURL","makeRequest","action","payload","success","message","response","fetch","method","mode","credentials","headers","body","JSON","stringify","_objectSpread","ok","Error","concat","status","text","result","parse","parseError","error","fetchLeads","addLead","lead","updateLead","deleteLead","leadId","fetchJobCounts","addJobCount","jobCount","updateJobCount","deleteJobCount","jobCountId","testConnection","geocodeAddress","address","calculateLomacoVents","sqft","options","arguments","length","undefined","batchCalculateVents","jobCountIds","googleSheetsService"],"sources":["C:/Users/PC_User/Desktop/free-crm/bhotch-crm/src/api/googleSheetsService.js"],"sourcesContent":["// Fix for deployment environment variable parsing issue\r\nlet GOOGLE_SCRIPT_URL = process.env.REACT_APP_GAS_WEB_APP_URL;\r\n\r\n// Handle case where environment variable includes the variable name\r\nif (GOOGLE_SCRIPT_URL && GOOGLE_SCRIPT_URL.includes('REACT_APP_GAS_WEB_APP_URL=')) {\r\n  GOOGLE_SCRIPT_URL = GOOGLE_SCRIPT_URL.split('REACT_APP_GAS_WEB_APP_URL=')[1];\r\n}\r\n\r\n// Ensure URL has proper protocol\r\nif (GOOGLE_SCRIPT_URL && !GOOGLE_SCRIPT_URL.startsWith('http')) {\r\n  GOOGLE_SCRIPT_URL = 'https://' + GOOGLE_SCRIPT_URL.replace(/^\\/+/, '');\r\n}\r\n\r\nclass GoogleSheetsService {\r\n  constructor(baseURL) {\r\n    this.baseURL = baseURL;\r\n  }\r\n\r\n  async makeRequest(action, payload) {\r\n    if (!this.baseURL) {\r\n      return { success: false, message: 'API endpoint is not configured.' };\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(this.baseURL, {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        credentials: 'omit',\r\n        headers: {\r\n          'Content-Type': 'text/plain;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({ action, ...payload })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Server responded with status: ${response.status}`);\r\n      }\r\n\r\n      const text = await response.text();\r\n\r\n      try {\r\n        const result = JSON.parse(text);\r\n        if (result.success === false) {\r\n          throw new Error(result.message || 'An unknown backend error occurred.');\r\n        }\r\n        return result;\r\n      } catch (parseError) {\r\n        throw new Error('Invalid server response. The backend may have crashed.');\r\n      }\r\n    } catch (error) {\r\n      return { success: false, message: `Network error: ${error.message}` };\r\n    }\r\n  }\r\n\r\n  // Lead operations\r\n  fetchLeads() {\r\n    return this.makeRequest('getLeads', {});\r\n  }\r\n\r\n  addLead(lead) {\r\n    return this.makeRequest('addLead', { lead });\r\n  }\r\n\r\n  updateLead(lead) {\r\n    return this.makeRequest('updateLead', { lead });\r\n  }\r\n\r\n  deleteLead(leadId) {\r\n    return this.makeRequest('deleteLead', { leadId });\r\n  }\r\n\r\n  // Job Count operations\r\n  fetchJobCounts() {\r\n    return this.makeRequest('getJobCounts', {});\r\n  }\r\n\r\n  addJobCount(jobCount) {\r\n    return this.makeRequest('addJobCount', { jobCount });\r\n  }\r\n\r\n  updateJobCount(jobCount) {\r\n    return this.makeRequest('updateJobCount', { jobCount });\r\n  }\r\n\r\n  deleteJobCount(jobCountId) {\r\n    return this.makeRequest('deleteJobCount', { jobCountId });\r\n  }\r\n\r\n  // Utility operations\r\n  testConnection() {\r\n    return this.makeRequest('testConnection', {});\r\n  }\r\n\r\n  geocodeAddress(address) {\r\n    return this.makeRequest('geocodeAddress', { address });\r\n  }\r\n\r\n  // Lomanco vent calculation operations\r\n  calculateLomacoVents(sqft, options = {}) {\r\n    return this.makeRequest('calculateLomacoVents', { sqft, options });\r\n  }\r\n\r\n  batchCalculateVents(jobCountIds = []) {\r\n    return this.makeRequest('batchCalculateVents', { jobCountIds });\r\n  }\r\n}\r\n\r\nexport const googleSheetsService = new GoogleSheetsService(GOOGLE_SCRIPT_URL);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}