{"ast":null,"code":"import _objectSpread from\"C:/Users/PC_User/Desktop/free-crm/bhotch-crm/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";const GOOGLE_SCRIPT_URL=process.env.REACT_APP_GAS_WEB_APP_URL;class GoogleSheetsService{constructor(baseURL){this.baseURL=baseURL;}async makeRequest(action,payload){if(!this.baseURL)return{success:false,message:'API endpoint is not configured.'};try{const response=await fetch(this.baseURL,{method:'POST',mode:'cors',credentials:'omit',headers:{'Content-Type':'text/plain;charset=utf-8'},body:JSON.stringify(_objectSpread({action},payload))});if(!response.ok)throw new Error(\"Server responded with status: \".concat(response.status));const text=await response.text();try{const result=JSON.parse(text);if(result.success===false)throw new Error(result.message||'An unknown backend error occurred.');return result;}catch(_unused){throw new Error('Invalid server response. The backend may have crashed.');}}catch(error){return{success:false,message:\"Network error: \".concat(error.message)};}}fetchLeads(){return this.makeRequest('getLeads',{});}addLead(lead){return this.makeRequest('addLead',{lead});}updateLead(lead){return this.makeRequest('updateLead',{lead});}deleteLead(leadId){return this.makeRequest('deleteLead',{leadId});}testConnection(){return this.makeRequest('testConnection',{});}geocodeAddress(address){return this.makeRequest('geocodeAddress',{address});}}export const googleSheetsService=new GoogleSheetsService(GOOGLE_SCRIPT_URL);","map":{"version":3,"names":["GOOGLE_SCRIPT_URL","process","env","REACT_APP_GAS_WEB_APP_URL","GoogleSheetsService","constructor","baseURL","makeRequest","action","payload","success","message","response","fetch","method","mode","credentials","headers","body","JSON","stringify","_objectSpread","ok","Error","concat","status","text","result","parse","_unused","error","fetchLeads","addLead","lead","updateLead","deleteLead","leadId","testConnection","geocodeAddress","address","googleSheetsService"],"sources":["C:/Users/PC_User/Desktop/free-crm/bhotch-crm/src/api/googleSheetsService.js"],"sourcesContent":["const GOOGLE_SCRIPT_URL = process.env.REACT_APP_GAS_WEB_APP_URL;\r\n\r\nclass GoogleSheetsService {\r\n  constructor(baseURL) { this.baseURL = baseURL; }\r\n    \r\n  async makeRequest(action, payload) {\r\n    if (!this.baseURL) return { success: false, message: 'API endpoint is not configured.' };\r\n    try {\r\n      const response = await fetch(this.baseURL, {\r\n        method: 'POST', mode: 'cors', credentials: 'omit',\r\n        headers: { 'Content-Type': 'text/plain;charset=utf-8' },\r\n        body: JSON.stringify({ action, ...payload })\r\n      });\r\n      if (!response.ok) throw new Error(`Server responded with status: ${response.status}`);\r\n      const text = await response.text();\r\n      try { \r\n        const result = JSON.parse(text);\r\n        if (result.success === false) throw new Error(result.message || 'An unknown backend error occurred.');\r\n        return result;\r\n      }\r\n      catch { throw new Error('Invalid server response. The backend may have crashed.'); }\r\n    } catch (error) {\r\n      return { success: false, message: `Network error: ${error.message}` };\r\n    }\r\n  }\r\n    \r\n  fetchLeads() { return this.makeRequest('getLeads', {}); }\r\n  addLead(lead) { return this.makeRequest('addLead', { lead }); }\r\n  updateLead(lead) { return this.makeRequest('updateLead', { lead }); }\r\n  deleteLead(leadId) { return this.makeRequest('deleteLead', { leadId }); }\r\n  testConnection() { return this.makeRequest('testConnection', {}); }\r\n  geocodeAddress(address) { return this.makeRequest('geocodeAddress', { address }); }\r\n}\r\n\r\nexport const googleSheetsService = new GoogleSheetsService(GOOGLE_SCRIPT_URL);"],"mappings":"iIAAA,KAAM,CAAAA,iBAAiB,CAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB,CAE/D,KAAM,CAAAC,mBAAoB,CACxBC,WAAWA,CAACC,OAAO,CAAE,CAAE,IAAI,CAACA,OAAO,CAAGA,OAAO,CAAE,CAE/C,KAAM,CAAAC,WAAWA,CAACC,MAAM,CAAEC,OAAO,CAAE,CACjC,GAAI,CAAC,IAAI,CAACH,OAAO,CAAE,MAAO,CAAEI,OAAO,CAAE,KAAK,CAAEC,OAAO,CAAE,iCAAkC,CAAC,CACxF,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,IAAI,CAACP,OAAO,CAAE,CACzCQ,MAAM,CAAE,MAAM,CAAEC,IAAI,CAAE,MAAM,CAAEC,WAAW,CAAE,MAAM,CACjDC,OAAO,CAAE,CAAE,cAAc,CAAE,0BAA2B,CAAC,CACvDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAAC,aAAA,EAAGb,MAAM,EAAKC,OAAO,CAAE,CAC7C,CAAC,CAAC,CACF,GAAI,CAACG,QAAQ,CAACU,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,kCAAAC,MAAA,CAAkCZ,QAAQ,CAACa,MAAM,CAAE,CAAC,CACrF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAd,QAAQ,CAACc,IAAI,CAAC,CAAC,CAClC,GAAI,CACF,KAAM,CAAAC,MAAM,CAAGR,IAAI,CAACS,KAAK,CAACF,IAAI,CAAC,CAC/B,GAAIC,MAAM,CAACjB,OAAO,GAAK,KAAK,CAAE,KAAM,IAAI,CAAAa,KAAK,CAACI,MAAM,CAAChB,OAAO,EAAI,oCAAoC,CAAC,CACrG,MAAO,CAAAgB,MAAM,CACf,CACA,MAAAE,OAAA,CAAM,CAAE,KAAM,IAAI,CAAAN,KAAK,CAAC,wDAAwD,CAAC,CAAE,CACrF,CAAE,MAAOO,KAAK,CAAE,CACd,MAAO,CAAEpB,OAAO,CAAE,KAAK,CAAEC,OAAO,mBAAAa,MAAA,CAAoBM,KAAK,CAACnB,OAAO,CAAG,CAAC,CACvE,CACF,CAEAoB,UAAUA,CAAA,CAAG,CAAE,MAAO,KAAI,CAACxB,WAAW,CAAC,UAAU,CAAE,CAAC,CAAC,CAAC,CAAE,CACxDyB,OAAOA,CAACC,IAAI,CAAE,CAAE,MAAO,KAAI,CAAC1B,WAAW,CAAC,SAAS,CAAE,CAAE0B,IAAK,CAAC,CAAC,CAAE,CAC9DC,UAAUA,CAACD,IAAI,CAAE,CAAE,MAAO,KAAI,CAAC1B,WAAW,CAAC,YAAY,CAAE,CAAE0B,IAAK,CAAC,CAAC,CAAE,CACpEE,UAAUA,CAACC,MAAM,CAAE,CAAE,MAAO,KAAI,CAAC7B,WAAW,CAAC,YAAY,CAAE,CAAE6B,MAAO,CAAC,CAAC,CAAE,CACxEC,cAAcA,CAAA,CAAG,CAAE,MAAO,KAAI,CAAC9B,WAAW,CAAC,gBAAgB,CAAE,CAAC,CAAC,CAAC,CAAE,CAClE+B,cAAcA,CAACC,OAAO,CAAE,CAAE,MAAO,KAAI,CAAChC,WAAW,CAAC,gBAAgB,CAAE,CAAEgC,OAAQ,CAAC,CAAC,CAAE,CACpF,CAEA,MAAO,MAAM,CAAAC,mBAAmB,CAAG,GAAI,CAAApC,mBAAmB,CAACJ,iBAAiB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}