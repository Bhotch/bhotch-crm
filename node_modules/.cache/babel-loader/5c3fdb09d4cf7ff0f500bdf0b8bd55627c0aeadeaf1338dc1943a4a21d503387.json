{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC_User\\\\Desktop\\\\free-crm\\\\bhotch-crm\\\\src\\\\components\\\\BatchVentCalculation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { Calculator, Play, Pause, CheckCircle, AlertCircle, Loader2, BarChart3 } from 'lucide-react';\nimport { googleSheetsService } from '../api/googleSheetsService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction BatchVentCalculation({\n  jobCounts,\n  onBatchComplete,\n  addNotification\n}) {\n  _s();\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [progress, setProgress] = useState(null);\n  const [results, setResults] = useState(null);\n  const [selectedJobCounts, setSelectedJobCounts] = useState([]);\n  const eligibleJobCounts = jobCounts.filter(jc => jc.sqFt && !isNaN(jc.sqFt) && jc.sqFt > 0 && (!jc.ridgeVents || !jc.turbineVents || !jc.rimeFlow));\n  const handleSelectAll = useCallback(() => {\n    if (selectedJobCounts.length === eligibleJobCounts.length) {\n      setSelectedJobCounts([]);\n    } else {\n      setSelectedJobCounts(eligibleJobCounts.map(jc => jc.id));\n    }\n  }, [selectedJobCounts.length, eligibleJobCounts]);\n  const handleJobCountToggle = useCallback(jobCountId => {\n    setSelectedJobCounts(prev => prev.includes(jobCountId) ? prev.filter(id => id !== jobCountId) : [...prev, jobCountId]);\n  }, []);\n  const handleBatchCalculation = useCallback(async () => {\n    if (selectedJobCounts.length === 0) {\n      addNotification('Please select job counts to process', 'error');\n      return;\n    }\n    setIsProcessing(true);\n    setProgress({\n      processed: 0,\n      total: selectedJobCounts.length,\n      errors: 0\n    });\n    const processResults = [];\n    try {\n      for (let i = 0; i < selectedJobCounts.length; i++) {\n        const jobCountId = selectedJobCounts[i];\n        const jobCount = eligibleJobCounts.find(jc => jc.id === jobCountId);\n        if (!jobCount) continue;\n        try {\n          setProgress(prev => ({\n            ...prev,\n            current: jobCount.customerName || 'Processing...'\n          }));\n          const response = await googleSheetsService.calculateLomacoVents(jobCount.sqFt);\n          if (response.success && response.ventCalculations) {\n            // Update the job count with calculated values\n            const updatedJobCount = {\n              ...jobCount,\n              ridgeVents: response.ventCalculations.ridgeVents,\n              turbineVents: response.ventCalculations.turbineVents,\n              rimeFlow: response.ventCalculations.rimeFlow,\n              ventCalculationSource: response.ventCalculations.source,\n              ventCalculationDate: new Date().toISOString()\n            };\n            const updateResponse = await googleSheetsService.updateJobCount(updatedJobCount);\n            if (updateResponse.success) {\n              processResults.push({\n                jobCount: updatedJobCount,\n                calculations: response.ventCalculations,\n                method: response.calculationMethod,\n                success: true\n              });\n            } else {\n              throw new Error('Failed to update job count');\n            }\n          } else {\n            throw new Error(response.message || 'Calculation failed');\n          }\n          setProgress(prev => ({\n            ...prev,\n            processed: prev.processed + 1,\n            current: `Completed: ${jobCount.customerName || 'Unknown'}`\n          }));\n        } catch (error) {\n          processResults.push({\n            jobCount,\n            error: error.message,\n            success: false\n          });\n          setProgress(prev => ({\n            ...prev,\n            processed: prev.processed + 1,\n            errors: prev.errors + 1,\n            current: `Error: ${jobCount.customerName || 'Unknown'}`\n          }));\n        }\n\n        // Add delay between requests to avoid rate limiting\n        if (i < selectedJobCounts.length - 1) {\n          await new Promise(resolve => setTimeout(resolve, 1000));\n        }\n      }\n      setResults(processResults);\n      const successCount = processResults.filter(r => r.success).length;\n      const errorCount = processResults.filter(r => !r.success).length;\n      addNotification(`Batch calculation complete: ${successCount} successful, ${errorCount} errors`, errorCount === 0 ? 'success' : 'info');\n      if (onBatchComplete) {\n        onBatchComplete(processResults);\n      }\n    } catch (error) {\n      addNotification(`Batch calculation failed: ${error.message}`, 'error');\n    } finally {\n      setIsProcessing(false);\n      setTimeout(() => {\n        setProgress(null);\n      }, 5000);\n    }\n  }, [selectedJobCounts, eligibleJobCounts, addNotification, onBatchComplete]);\n  const formatValue = useCallback(value => {\n    if (!value || value === 0) return '-';\n    return typeof value === 'number' ? value.toLocaleString() : value;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-sm border p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(BarChart3, {\n          className: \"h-6 w-6 text-purple-600 mr-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-900\",\n            children: \"Batch Vent Calculation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Process multiple job counts automatically\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSelectAll,\n          className: \"px-3 py-1 text-xs font-medium border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 transition-colors\",\n          children: selectedJobCounts.length === eligibleJobCounts.length ? 'Deselect All' : 'Select All'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBatchCalculation,\n          disabled: isProcessing || selectedJobCounts.length === 0,\n          className: \"inline-flex items-center px-4 py-2 border border-transparent rounded-lg text-sm font-medium text-white bg-purple-600 hover:bg-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\",\n          children: isProcessing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Loader2, {\n              className: \"w-4 h-4 mr-2 animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this), \"Processing...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Play, {\n              className: \"w-4 h-4 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this), \"Process Selected (\", selectedJobCounts.length, \")\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), progress && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 bg-blue-50 rounded-lg border border-blue-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-medium text-blue-800\",\n          children: [\"Processing: \", progress.processed, \" of \", progress.total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-blue-600\",\n          children: [Math.round(progress.processed / progress.total * 100), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full bg-blue-200 rounded-full h-2 mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-600 h-2 rounded-full transition-all duration-300\",\n          style: {\n            width: `${progress.processed / progress.total * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-blue-700\",\n        children: progress.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this), progress.errors > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-red-600 mt-1\",\n        children: [progress.errors, \" errors encountered\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between text-sm text-gray-600 border-b border-gray-200 pb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Eligible Job Counts (\", eligibleJobCounts.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"SQFT \\u2192 Ridge/Turbine/Flow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), eligibleJobCounts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8 text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(Calculator, {\n          className: \"w-8 h-8 mx-auto mb-2 text-gray-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No job counts eligible for batch calculation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs\",\n          children: \"Job counts need SQFT values and missing vent calculations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-h-64 overflow-y-auto space-y-2\",\n        children: eligibleJobCounts.map(jobCount => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex items-center justify-between p-3 rounded-lg border transition-colors cursor-pointer ${selectedJobCounts.includes(jobCount.id) ? 'bg-purple-50 border-purple-200' : 'bg-gray-50 border-gray-200 hover:bg-gray-100'}`,\n          onClick: () => handleJobCountToggle(jobCount.id),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedJobCounts.includes(jobCount.id),\n              onChange: () => handleJobCountToggle(jobCount.id),\n              className: \"mr-3 h-4 w-4 text-purple-600 focus:ring-purple-500 border-gray-300 rounded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium text-gray-900\",\n                children: jobCount.customerName || `${jobCount.firstName || ''} ${jobCount.lastName || ''}`.trim() || 'Unknown Customer'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-500\",\n                children: new Date(jobCount.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-medium text-gray-900\",\n              children: [formatValue(jobCount.sqFt), \" sq ft\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500\",\n              children: [\"R:\", formatValue(jobCount.ridgeVents), \" T:\", formatValue(jobCount.turbineVents), \" F:\", formatValue(jobCount.rimeFlow)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 33\n          }, this)]\n        }, jobCount.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-gray-50 rounded-lg border\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-sm font-medium text-gray-900 mb-3\",\n        children: \"Batch Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-3 gap-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg font-bold text-green-600\",\n            children: results.filter(r => r.success).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-600\",\n            children: \"Successful\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg font-bold text-red-600\",\n            children: results.filter(r => !r.success).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-600\",\n            children: \"Errors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg font-bold text-blue-600\",\n            children: results.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-600\",\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n}\n_s(BatchVentCalculation, \"XmCrcD1wbGd0P4MkFzQQ4j+Kz2E=\");\n_c = BatchVentCalculation;\nexport default BatchVentCalculation;\nvar _c;\n$RefreshReg$(_c, \"BatchVentCalculation\");","map":{"version":3,"names":["React","useState","useCallback","Calculator","Play","Pause","CheckCircle","AlertCircle","Loader2","BarChart3","googleSheetsService","jsxDEV","_jsxDEV","Fragment","_Fragment","BatchVentCalculation","jobCounts","onBatchComplete","addNotification","_s","isProcessing","setIsProcessing","progress","setProgress","results","setResults","selectedJobCounts","setSelectedJobCounts","eligibleJobCounts","filter","jc","sqFt","isNaN","ridgeVents","turbineVents","rimeFlow","handleSelectAll","length","map","id","handleJobCountToggle","jobCountId","prev","includes","handleBatchCalculation","processed","total","errors","processResults","i","jobCount","find","current","customerName","response","calculateLomacoVents","success","ventCalculations","updatedJobCount","ventCalculationSource","source","ventCalculationDate","Date","toISOString","updateResponse","updateJobCount","push","calculations","method","calculationMethod","Error","message","error","Promise","resolve","setTimeout","successCount","r","errorCount","formatValue","value","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","Math","round","style","width","type","checked","onChange","firstName","lastName","trim","date","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/PC_User/Desktop/free-crm/bhotch-crm/src/components/BatchVentCalculation.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Calculator, Play, Pause, CheckCircle, AlertCircle, Loader2, BarChart3 } from 'lucide-react';\r\nimport { googleSheetsService } from '../api/googleSheetsService';\r\n\r\nfunction BatchVentCalculation({ jobCounts, onBatchComplete, addNotification }) {\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    const [progress, setProgress] = useState(null);\r\n    const [results, setResults] = useState(null);\r\n    const [selectedJobCounts, setSelectedJobCounts] = useState([]);\r\n\r\n    const eligibleJobCounts = jobCounts.filter(jc =>\r\n        jc.sqFt && !isNaN(jc.sqFt) && jc.sqFt > 0 &&\r\n        (!jc.ridgeVents || !jc.turbineVents || !jc.rimeFlow)\r\n    );\r\n\r\n    const handleSelectAll = useCallback(() => {\r\n        if (selectedJobCounts.length === eligibleJobCounts.length) {\r\n            setSelectedJobCounts([]);\r\n        } else {\r\n            setSelectedJobCounts(eligibleJobCounts.map(jc => jc.id));\r\n        }\r\n    }, [selectedJobCounts.length, eligibleJobCounts]);\r\n\r\n    const handleJobCountToggle = useCallback((jobCountId) => {\r\n        setSelectedJobCounts(prev =>\r\n            prev.includes(jobCountId)\r\n                ? prev.filter(id => id !== jobCountId)\r\n                : [...prev, jobCountId]\r\n        );\r\n    }, []);\r\n\r\n    const handleBatchCalculation = useCallback(async () => {\r\n        if (selectedJobCounts.length === 0) {\r\n            addNotification('Please select job counts to process', 'error');\r\n            return;\r\n        }\r\n\r\n        setIsProcessing(true);\r\n        setProgress({ processed: 0, total: selectedJobCounts.length, errors: 0 });\r\n\r\n        const processResults = [];\r\n\r\n        try {\r\n            for (let i = 0; i < selectedJobCounts.length; i++) {\r\n                const jobCountId = selectedJobCounts[i];\r\n                const jobCount = eligibleJobCounts.find(jc => jc.id === jobCountId);\r\n\r\n                if (!jobCount) continue;\r\n\r\n                try {\r\n                    setProgress(prev => ({ ...prev, current: jobCount.customerName || 'Processing...' }));\r\n\r\n                    const response = await googleSheetsService.calculateLomacoVents(jobCount.sqFt);\r\n\r\n                    if (response.success && response.ventCalculations) {\r\n                        // Update the job count with calculated values\r\n                        const updatedJobCount = {\r\n                            ...jobCount,\r\n                            ridgeVents: response.ventCalculations.ridgeVents,\r\n                            turbineVents: response.ventCalculations.turbineVents,\r\n                            rimeFlow: response.ventCalculations.rimeFlow,\r\n                            ventCalculationSource: response.ventCalculations.source,\r\n                            ventCalculationDate: new Date().toISOString()\r\n                        };\r\n\r\n                        const updateResponse = await googleSheetsService.updateJobCount(updatedJobCount);\r\n\r\n                        if (updateResponse.success) {\r\n                            processResults.push({\r\n                                jobCount: updatedJobCount,\r\n                                calculations: response.ventCalculations,\r\n                                method: response.calculationMethod,\r\n                                success: true\r\n                            });\r\n                        } else {\r\n                            throw new Error('Failed to update job count');\r\n                        }\r\n                    } else {\r\n                        throw new Error(response.message || 'Calculation failed');\r\n                    }\r\n\r\n                    setProgress(prev => ({\r\n                        ...prev,\r\n                        processed: prev.processed + 1,\r\n                        current: `Completed: ${jobCount.customerName || 'Unknown'}`\r\n                    }));\r\n\r\n                } catch (error) {\r\n                    processResults.push({\r\n                        jobCount,\r\n                        error: error.message,\r\n                        success: false\r\n                    });\r\n\r\n                    setProgress(prev => ({\r\n                        ...prev,\r\n                        processed: prev.processed + 1,\r\n                        errors: prev.errors + 1,\r\n                        current: `Error: ${jobCount.customerName || 'Unknown'}`\r\n                    }));\r\n                }\r\n\r\n                // Add delay between requests to avoid rate limiting\r\n                if (i < selectedJobCounts.length - 1) {\r\n                    await new Promise(resolve => setTimeout(resolve, 1000));\r\n                }\r\n            }\r\n\r\n            setResults(processResults);\r\n\r\n            const successCount = processResults.filter(r => r.success).length;\r\n            const errorCount = processResults.filter(r => !r.success).length;\r\n\r\n            addNotification(\r\n                `Batch calculation complete: ${successCount} successful, ${errorCount} errors`,\r\n                errorCount === 0 ? 'success' : 'info'\r\n            );\r\n\r\n            if (onBatchComplete) {\r\n                onBatchComplete(processResults);\r\n            }\r\n\r\n        } catch (error) {\r\n            addNotification(`Batch calculation failed: ${error.message}`, 'error');\r\n        } finally {\r\n            setIsProcessing(false);\r\n            setTimeout(() => {\r\n                setProgress(null);\r\n            }, 5000);\r\n        }\r\n    }, [selectedJobCounts, eligibleJobCounts, addNotification, onBatchComplete]);\r\n\r\n    const formatValue = useCallback((value) => {\r\n        if (!value || value === 0) return '-';\r\n        return typeof value === 'number' ? value.toLocaleString() : value;\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n                <div className=\"flex items-center\">\r\n                    <BarChart3 className=\"h-6 w-6 text-purple-600 mr-3\" />\r\n                    <div>\r\n                        <h3 className=\"text-lg font-semibold text-gray-900\">Batch Vent Calculation</h3>\r\n                        <p className=\"text-sm text-gray-600\">\r\n                            Process multiple job counts automatically\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex items-center space-x-3\">\r\n                    <button\r\n                        onClick={handleSelectAll}\r\n                        className=\"px-3 py-1 text-xs font-medium border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 transition-colors\"\r\n                    >\r\n                        {selectedJobCounts.length === eligibleJobCounts.length ? 'Deselect All' : 'Select All'}\r\n                    </button>\r\n                    <button\r\n                        onClick={handleBatchCalculation}\r\n                        disabled={isProcessing || selectedJobCounts.length === 0}\r\n                        className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-lg text-sm font-medium text-white bg-purple-600 hover:bg-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n                    >\r\n                        {isProcessing ? (\r\n                            <>\r\n                                <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\r\n                                Processing...\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <Play className=\"w-4 h-4 mr-2\" />\r\n                                Process Selected ({selectedJobCounts.length})\r\n                            </>\r\n                        )}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Progress Indicator */}\r\n            {progress && (\r\n                <div className=\"mb-6 p-4 bg-blue-50 rounded-lg border border-blue-200\">\r\n                    <div className=\"flex items-center justify-between mb-2\">\r\n                        <span className=\"text-sm font-medium text-blue-800\">\r\n                            Processing: {progress.processed} of {progress.total}\r\n                        </span>\r\n                        <span className=\"text-sm text-blue-600\">\r\n                            {Math.round((progress.processed / progress.total) * 100)}%\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"w-full bg-blue-200 rounded-full h-2 mb-2\">\r\n                        <div\r\n                            className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\r\n                            style={{ width: `${(progress.processed / progress.total) * 100}%` }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-xs text-blue-700\">\r\n                        {progress.current}\r\n                    </div>\r\n                    {progress.errors > 0 && (\r\n                        <div className=\"text-xs text-red-600 mt-1\">\r\n                            {progress.errors} errors encountered\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            {/* Job Count Selection */}\r\n            <div className=\"space-y-3\">\r\n                <div className=\"flex items-center justify-between text-sm text-gray-600 border-b border-gray-200 pb-2\">\r\n                    <span>Eligible Job Counts ({eligibleJobCounts.length})</span>\r\n                    <span>SQFT → Ridge/Turbine/Flow</span>\r\n                </div>\r\n\r\n                {eligibleJobCounts.length === 0 ? (\r\n                    <div className=\"text-center py-8 text-gray-500\">\r\n                        <Calculator className=\"w-8 h-8 mx-auto mb-2 text-gray-400\" />\r\n                        <p>No job counts eligible for batch calculation</p>\r\n                        <p className=\"text-xs\">Job counts need SQFT values and missing vent calculations</p>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"max-h-64 overflow-y-auto space-y-2\">\r\n                        {eligibleJobCounts.map((jobCount) => (\r\n                            <div\r\n                                key={jobCount.id}\r\n                                className={`flex items-center justify-between p-3 rounded-lg border transition-colors cursor-pointer ${\r\n                                    selectedJobCounts.includes(jobCount.id)\r\n                                        ? 'bg-purple-50 border-purple-200'\r\n                                        : 'bg-gray-50 border-gray-200 hover:bg-gray-100'\r\n                                }`}\r\n                                onClick={() => handleJobCountToggle(jobCount.id)}\r\n                            >\r\n                                <div className=\"flex items-center\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={selectedJobCounts.includes(jobCount.id)}\r\n                                        onChange={() => handleJobCountToggle(jobCount.id)}\r\n                                        className=\"mr-3 h-4 w-4 text-purple-600 focus:ring-purple-500 border-gray-300 rounded\"\r\n                                    />\r\n                                    <div>\r\n                                        <div className=\"font-medium text-gray-900\">\r\n                                            {jobCount.customerName ||\r\n                                             `${jobCount.firstName || ''} ${jobCount.lastName || ''}`.trim() ||\r\n                                             'Unknown Customer'}\r\n                                        </div>\r\n                                        <div className=\"text-xs text-gray-500\">\r\n                                            {new Date(jobCount.date).toLocaleDateString()}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"text-right\">\r\n                                    <div className=\"text-sm font-medium text-gray-900\">\r\n                                        {formatValue(jobCount.sqFt)} sq ft\r\n                                    </div>\r\n                                    <div className=\"text-xs text-gray-500\">\r\n                                        R:{formatValue(jobCount.ridgeVents)} T:{formatValue(jobCount.turbineVents)} F:{formatValue(jobCount.rimeFlow)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Results Summary */}\r\n            {results && (\r\n                <div className=\"mt-6 p-4 bg-gray-50 rounded-lg border\">\r\n                    <h4 className=\"text-sm font-medium text-gray-900 mb-3\">Batch Results</h4>\r\n                    <div className=\"grid grid-cols-3 gap-4 text-center\">\r\n                        <div>\r\n                            <div className=\"text-lg font-bold text-green-600\">\r\n                                {results.filter(r => r.success).length}\r\n                            </div>\r\n                            <div className=\"text-xs text-gray-600\">Successful</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"text-lg font-bold text-red-600\">\r\n                                {results.filter(r => !r.success).length}\r\n                            </div>\r\n                            <div className=\"text-xs text-gray-600\">Errors</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"text-lg font-bold text-blue-600\">\r\n                                {results.length}\r\n                            </div>\r\n                            <div className=\"text-xs text-gray-600\">Total</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BatchVentCalculation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}